<Window
	x:Class="WanCeDesktopApp.Views.MainView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:comm="clr-namespace:WanCeDesktopApp.Common"
	xmlns:converter="clr-namespace:WanCeDesktopApp.Common"
	xmlns:cv="clr-namespace:WanCeDesktopApp.Common"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:ext="clr-namespace:WanCeDesktopApp.Extensions"
	xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:lex="http://wpflocalizeextension.codeplex.com"
	xmlns:local="clr-namespace:WanCeDesktopApp"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:prism="http://prismlibrary.com/"
	xmlns:system="clr-namespace:System;assembly=System.Runtime"
	xmlns:viewmodels="clr-namespace:WanCeDesktopApp.ViewModels"
	Title="MainWindow"
	Width="1300"
	Height="800"
	MinWidth="1174"
	MinHeight="734"
	lex:LocalizeDictionary.DesignCulture="zh"
	lex:ResxLocalizationProvider.DefaultAssembly="WanCeDesktopApp"
	lex:ResxLocalizationProvider.DefaultDictionary="lang"
	prism:ViewModelLocator.AutoWireViewModel="True"
	AllowsTransparency="True"
	Background="{DynamicResource MaterialDesignPaper}"
	FontFamily="{x:Static local:MaterialDesignFonts.MiSans}"
	SourceInitialized="Window_SourceInitialized"
	TextElement.FontFamily="{x:Static local:MaterialDesignFonts.MiSans}"
	TextElement.FontSize="13"
	TextElement.FontWeight="Regular"
	TextElement.Foreground="{DynamicResource MaterialDesignBody}"
	TextOptions.TextFormattingMode="Ideal"
	TextOptions.TextRenderingMode="Auto"
	WindowStartupLocation="CenterScreen"
	WindowStyle="None"
	mc:Ignorable="d">
	<Window.Resources>
		<!--<system:String x:Key="LiveDisplayTitleFormat">{0}[{1}]</system:String>-->
		<converter:StringSepcialFormatConverter x:Key="StringUnitConverter" />
		<Style x:Key="myMenuRadioButton" TargetType="{x:Type RadioButton}">
			<!--<Setter Property="d:DataContext" Value="{d:DesignInstance Type=comm:ShowInfo}" />-->
			<Setter Property="Background" Value="{DynamicResource SecondaryHueDarkBrush}" />
			<Setter Property="Foreground" Value="White" />
			<Setter Property="Visibility" Value="{Binding IsVisibility}" />
			<Setter Property="IsChecked" Value="{Binding IsChecked}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RadioButton}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="60" />
								<ColumnDefinition />
								<ColumnDefinition Width="60" />
							</Grid.ColumnDefinitions>
							<Path
								Grid.ColumnSpan="3"
								Data="M 0,100 L 70,10 C 80,0 90,0 100,0 L 300,0 C 310,0 320,0 330,10 L 400,100"
								Fill="{TemplateBinding Background}"
								Stretch="Fill"
								Stroke="Black" />
							<!--<Border
                                x:Name="border"
                                Grid.Column="1"
                                Background="{TemplateBinding Background}" />
                            <Path
                                Data="M0,100 C30,100 180,0 280,0 "
                                Fill="{TemplateBinding Background}"
                                Stretch="Fill"
                                Stroke="Black"
                                StrokeThickness="1" />
                            <Path
                                Grid.Column="2"
                                Data="M0,0 C100,0 250,100 280,100 L0,100"
                                Fill="{TemplateBinding Background}"
                                Stretch="Fill"
                                Stroke="Black"
                                StrokeThickness="1" />-->
							<StackPanel
								Grid.Column="1"
								HorizontalAlignment="Center"
								Orientation="Horizontal">
								<materialDesign:PackIcon
									Width="30"
									Height="31"
									Margin="0,0,10,0"
									VerticalAlignment="Center"
									Focusable="False"
									Foreground="{TemplateBinding Foreground}"
									Kind="{Binding Icon}" />
								<TextBlock
									VerticalAlignment="Center"
									Focusable="False"
									Foreground="{TemplateBinding Foreground}">
									<TextBlock.Text>
										<MultiBinding Converter="{StaticResource LocMultiConverter}">
											<MultiBinding.Bindings>
												<Binding Path="Title" />
												<Binding Path="Culture" Source="{x:Static lex:LocalizeDictionary.Instance}" />
											</MultiBinding.Bindings>
										</MultiBinding>
									</TextBlock.Text>
								</TextBlock>
							</StackPanel>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="Background" Value="#D01A33" />
								<Setter Property="Panel.ZIndex" Value="1" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ContextMenu x:Key="myConsole">
			<MenuItem
				Click="listBoxData_Click"
				Header="{lex:Loc TabSectionTitleLiveDisplays}"
				Tag="ConsoleLiveDisplaysView" />
			<MenuItem
				Click="listBoxData_Click"
				Header="{lex:Loc TabSectionTitleSoftKeys}"
				Tag="ConsoleSoftKeysView" />
			<MenuItem
				Click="listBoxData_Click"
				Header="{lex:Loc TabSectionTitleFrame}"
				Tag="ConsoleFrameView" />
			<MenuItem
				Click="listBoxData_Click"
				Header="{lex:Loc TabSectionTitleGrips}"
				Tag="ConsoleGripsView" />
		</ContextMenu>
	</Window.Resources>
	<WindowChrome.WindowChrome>
		<WindowChrome CaptionHeight="0" ResizeBorderThickness="5" />
	</WindowChrome.WindowChrome>
	<!--  DynamicResource MaterialDesignBody添加动态主题  -->
	<!--  materialDesign:DialogHost自定义的标题栏  -->
	<materialDesign:DialogHost DialogTheme="Inherit" Identifier="Root">
		<materialDesign:DrawerHost x:Name="drawerHost">
			<Grid Background="#222627">
				<Grid.RowDefinitions>
					<RowDefinition Height="auto" />
					<RowDefinition Height="auto" />
					<RowDefinition Height="auto" />
					<RowDefinition />
					<RowDefinition Height="auto" />
					<RowDefinition Height="auto" />
				</Grid.RowDefinitions>
				<!--  最大化最小化  -->
				<materialDesign:ColorZone
					x:Name="ColorZone"
					Padding="1"
					materialDesign:ShadowAssist.ShadowDepth="Depth2"
					DockPanel.Dock="Top"
					Mode="PrimaryMid">
					<DockPanel LastChildFill="True">
						<StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
							<Menu>
								<MenuItem>
									<MenuItem.Header>
										<materialDesign:PackIcon Foreground="{DynamicResource MaterialDesignDarkForeground}" Kind="Translate" />
									</MenuItem.Header>
									<MenuItem
										Command="{Binding SwitchToLangCommand}"
										CommandParameter="zh"
										Header="中文" />
									<MenuItem
										Command="{Binding SwitchToLangCommand}"
										CommandParameter="en"
										Header="English" />
								</MenuItem>
							</Menu>
							<Button
								x:Name="triangle"
								Content="▼"
								Style="{StaticResource MaterialDesignFlatMidBgButton}" />
							<Button
								x:Name="btnMin"
								Content="━"
								Style="{StaticResource MaterialDesignFlatMidBgButton}" />
							<Button
								x:Name="btnMax"
								Content="☐"
								Style="{StaticResource MaterialDesignFlatMidBgButton}" />
							<Button
								x:Name="btnClose"
								Content="✕"
								Style="{StaticResource MaterialDesignFlatMidBgButton}" />
						</StackPanel>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<!--<ToggleButton x:Name="MenuToggleButton"
                                          Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                          IsChecked="False"
                                          AutomationProperties.Name="HamburgerToggleButton" />-->
							<Button
								Margin="10"
								materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
								Command="{Binding GoBackCommand}"
								Content="{materialDesign:PackIcon Kind=ArrowLeft,
								                                  Size=24}"
								Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
								Style="{StaticResource MaterialDesignToolButton}"
								ToolTip="Previous Item" />
							<Button
								Grid.Column="1"
								Margin="10"
								materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
								Command="{Binding GoForwardCommand}"
								Content="{materialDesign:PackIcon Kind=ArrowRight,
								                                  Size=24}"
								Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
								Style="{StaticResource MaterialDesignToolButton}"
								ToolTip="Next Item" />
							<TextBlock
								x:Name="rctHeader"
								Grid.Column="2"
								Padding="0,10"
								VerticalAlignment="Center"
								AutomationProperties.Name="Material Design In XAML Toolkit"
								PreviewMouseLeftButtonDown="rctHeader_PreviewMouseLeftButtonDown"
								PreviewMouseLeftButtonUp="rctHeader_PreviewMouseLeftButtonUp"
								PreviewMouseMove="rctHeader_PreviewMouseMove"
								Text="TestPilot_V3.0" />
						</Grid>
					</DockPanel>
				</materialDesign:ColorZone>
				<Grid Grid.Row="1">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="100" />
					</Grid.ColumnDefinitions>
					<DockPanel Grid.Column="0">
						<ItemsControl x:Name="listBoxData" ItemsSource="{Binding DataBars}">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<UniformGrid Columns="{Binding LiveDisplayColumnCount}" Rows="{Binding LiveDisplayRowCount}" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<Grid Margin="5" Background="#222627">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="auto" />
											<ColumnDefinition />
											<ColumnDefinition Width="auto" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="auto" />
											<RowDefinition />
											<RowDefinition Height="auto" />
										</Grid.RowDefinitions>
										<Border
											Grid.RowSpan="3"
											Grid.ColumnSpan="3"
											Background="WhiteSmoke"
											CornerRadius="5"
											Opacity="0.9" />
										<StackPanel Margin="3">
											<TextBlock
												HorizontalAlignment="Center"
												FontSize="15"
												Foreground="Black">
												<TextBlock.Text>
													<MultiBinding Converter="{StaticResource StringUnitConverter}">
														<Binding Path="Title" />
														<Binding Path="TotalMaximum" />
													</MultiBinding>
												</TextBlock.Text>
											</TextBlock>

										</StackPanel>
										<StackPanel
											Grid.Row="1"
											Grid.ColumnSpan="3"
											HorizontalAlignment="Center"
											VerticalAlignment="Center">
											<TextBlock
												FontSize="20"
												FontWeight="Bold"
												Foreground="Black"
												Text="{Binding DisplayValue}" />
										</StackPanel>
										<TextBlock
											Grid.Row="2"
											Grid.ColumnSpan="3"
											HorizontalAlignment="Center"
											Foreground="Black"
											Text="{Binding Unit}" />
										<Button
											Grid.RowSpan="2"
											Grid.Column="1"
											Grid.ColumnSpan="2"
											Margin="3"
											HorizontalAlignment="Right"
											VerticalAlignment="Top"
											Background="Transparent"
											BorderThickness="0"
											Content="↪0"
											Foreground="Black"
											ToolTip="Zero Set">
											<i:Interaction.Triggers>
												<i:EventTrigger EventName="Click">
													<i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.ClearThoroughfareCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}, Path=DataContext}" />
												</i:EventTrigger>
											</i:Interaction.Triggers>
										</Button>
										<!--<materialDesign:PackIcon
                                            Grid.RowSpan="2"
                                            Grid.Column="1"
                                            Grid.ColumnSpan="2"
                                            Width="40"
                                            Height="40"
                                            Margin="3"
                                            HorizontalAlignment="Right"
                                            Kind="Autorenew">
                                            <materialDesign:PackIcon.Style>
                                                <Style TargetType="Control">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Foreground" Value="Blue" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </materialDesign:PackIcon.Style>
                                        </materialDesign:PackIcon>-->
										<TextBlock
											Grid.Row="2"
											Grid.Column="2"
											Margin="3"
											VerticalAlignment="Center"
											FontSize="15"
											Foreground="Black"
											Text="Max:200"
											Visibility="{Binding MaxVisibility}" />
										<TextBlock
											Grid.Row="2"
											Grid.Column="0"
											Margin="3"
											VerticalAlignment="Center"
											FontSize="15"
											Foreground="Black"
											Text="Rate:20"
											Visibility="{Binding RateVisibility}" />
									</Grid>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
							<ItemsControl.ContextMenu>
								<ContextMenu>
									<MenuItem
										Click="listBoxData_Click"
										Header="{lex:Loc TabSectionTitleLiveDisplays}"
										Tag="ConsoleLiveDisplaysView" />
									<MenuItem
										Click="listBoxData_Click"
										Header="{lex:Loc TabSectionTitleSoftKeys}"
										Tag="ConsoleSoftKeysView" />
									<MenuItem
										Click="listBoxData_Click"
										Header="{lex:Loc TabSectionTitleFrame}"
										Tag="ConsoleFrameView" />
									<MenuItem
										Click="listBoxData_Click"
										Header="{lex:Loc TabSectionTitleGrips}"
										Tag="ConsoleGripsView" />
								</ContextMenu>
							</ItemsControl.ContextMenu>
						</ItemsControl>
					</DockPanel>
					<DockPanel Grid.Column="1">
						<Button
							x:Name="AddDataShow"
							Grid.Column="1"
							Height="80"
							Margin="5"
							Background="{DynamicResource SecondaryHueDarkBrush}"
							Command="{Binding ExecuteAddDataShowCommand}"
							CommandParameter="AddShowData"
							Cursor="Hand">
							<comm:ExtPackIcon
								Width="60"
								Height="60"
								Kind="MachineFrame" />
						</Button>
					</DockPanel>
					<!--<Border
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="8"
                            Background="White"
                            CornerRadius="5"
                            Opacity="0.9">-->
					<!--<Button
                                x:Name="AddDataShow"
                                Grid.Column="1"
                                Command="{Binding ExecuteAddDataShowCommand}"
                                CommandParameter="AddShowData"
                                Content="btn" />-->
					<!--</Border>-->
				</Grid>
				<!--  主标题栏  -->
				<Grid
					Grid.Row="2"
					Height="70"
					Margin="10,0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="auto" />
						<ColumnDefinition Width="225*" />
						<ColumnDefinition Width="19*" />
						<ColumnDefinition Width="auto" />
					</Grid.ColumnDefinitions>
					<Border
						Grid.Column="0"
						Grid.ColumnSpan="3"
						Background="#222627" />
					<DockPanel Width="80">
						<Canvas>
							<Button
								x:Name="HomeButton"
								Width="60"
								Height="60"
								Padding="0"
								materialDesign:ButtonAssist.CornerRadius="30"
								BorderBrush="White"
								BorderThickness="3"
								Click="HomeButton_Click"
								Command="{Binding HomeButtonClickCommand}"
								Cursor="Hand"
								Style="{StaticResource MaterialDesignFlatMidBgButton}">
								<Button.ToolTip>
									<MultiBinding Converter="{StaticResource LocMultiConverter}">
										<MultiBinding.Bindings>
											<Binding Path="HomeToolTip" />
											<Binding Path="Culture" Source="{x:Static lex:LocalizeDictionary.Instance}" />
										</MultiBinding.Bindings>
									</MultiBinding>
								</Button.ToolTip>
								<Button.Content>
									<materialDesign:PackIcon
										Width="30"
										Height="30"
										Kind="{Binding HomeIcon}" />
								</Button.Content>
							</Button>
						</Canvas>
					</DockPanel>
					<StackPanel
						Grid.Column="1"
						Grid.ColumnSpan="2"
						Orientation="Horizontal">
						<RadioButton
							Width="300"
							DataContext="{Binding Menu1}"
							Focusable="False"
							GroupName="MenuBar"
							Style="{StaticResource myMenuRadioButton}"
							Tag="TestView">
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="Checked">
									<i:InvokeCommandAction Command="{Binding NavigateCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RadioButton}, Path=DataContext}" />
								</i:EventTrigger>
							</i:Interaction.Triggers>
						</RadioButton>
						<RadioButton
							x:Name="rbtn2"
							Width="300"
							Margin="-30,0"
							BorderBrush="AntiqueWhite"
							BorderThickness="1"
							Command="{Binding NavigateCommand}"
							CommandParameter="{Binding ElementName=rbtn2, Path=DataContext}"
							DataContext="{Binding Menu2}"
							GroupName="MenuBar"
							Style="{StaticResource myMenuRadioButton}"
							Tag="MethodView" />
						<RadioButton
							Width="300"
							DataContext="{Binding Menu3}"
							GroupName="MenuBar"
							Style="{StaticResource myMenuRadioButton}"
							Tag="SystemManageView" />
					</StackPanel>
					<StackPanel Grid.Column="3" Orientation="Horizontal">
						<ItemsControl ItemsSource="{Binding ToolBars}" MouseDoubleClick="ItemsControl_MouseDoubleClick">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel Orientation="Horizontal" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<Grid Visibility="{Binding IsVisibility}">
										<Border Margin="5" Background="Transparent">
											<i:Interaction.Triggers>
												<i:EventTrigger EventName="MouseLeftButtonUp">
													<i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.CommonKeyClickCommand}" CommandParameter="{Binding Icon}" />
												</i:EventTrigger>
											</i:Interaction.Triggers>
											<Border.ToolTip>
												<MultiBinding Converter="{StaticResource LocMultiConverter}">
													<MultiBinding.Bindings>
														<Binding Path="Description" />
														<Binding Path="Culture" Source="{x:Static lex:LocalizeDictionary.Instance}" />
													</MultiBinding.Bindings>
												</MultiBinding>
											</Border.ToolTip>
											<materialDesign:PackIcon
												Width="40"
												Height="40"
												VerticalAlignment="Center"
												Foreground="{DynamicResource MaterialDesignDarkForeground}"
												Kind="{Binding Icon}" />
										</Border>
									</Grid>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
						<!--<Button
                            Height="50"
                            Margin="5"
                            materialDesign:ButtonAssist.CornerRadius="5"
                            Content="{materialDesign:PackIcon Kind=ContentSave,
                                                              Size=30}" />
                        <Button
                            Height="50"
                            Margin="5"
                            materialDesign:ButtonAssist.CornerRadius="5"
                            Content="{materialDesign:PackIcon Kind=ContentSave,
                                                              Size=30}" />
                        <Button
                            Height="50"
                            Margin="5"
                            materialDesign:ButtonAssist.CornerRadius="5"
                            Content="{materialDesign:PackIcon Kind=ContentSave,
                                                              Size=30}" />-->
					</StackPanel>
					<!--<Border BorderBrush="Black" Grid.Column="0" Grid.ColumnSpan="3"
                            BorderThickness="2,2,2,0"></Border>-->
				</Grid>
				<!--  注册导航区域  -->
				<Border
					Grid.Row="3"
					BorderBrush="LightGray"
					BorderThickness="0,2,0,0" />
				<Border Grid.Row="3" Background="{DynamicResource MaterialDesignLightBackground}" />
				<Border
					x:Name="NegativeBorder"
					Grid.Row="3"
					BorderBrush="#D01A33"
					BorderThickness="0,5,0,0"
					Visibility="{Binding IsVisibility}" />
				<ContentControl
					Grid.Row="3"
					Margin="0,5,0,0"
					prism:RegionManager.RegionName="{x:Static ext:PrismManage.MainViewRegionName}" />
				<!--  start  -->
				<!--<Grid Grid.Row="4" Visibility="{Binding SoftKeyPanelVisibility}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="5" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Border
                        Grid.RowSpan="2"
                        Grid.ColumnSpan="2"
                        Background="Red" />
                    <Path
                        Grid.Row="1"
                        Data="M 0,80 L0,0 C 310,0 320,0 330,10 L 370,80"
                        Fill="{DynamicResource PrimaryHueGridBrush}"
                        Stretch="Fill"
                        Stroke="Black" />
                    <ItemsControl
                        Grid.Row="1"
                        Margin="5,0,180,0"
                        ContextMenu="{StaticResource myConsole}"
                        ItemsSource="{Binding SoftKeyBars}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Rows="1" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="20,10">
				-->
				<!--<Border Name="border" BorderThickness="2" BorderBrush="Black" CornerRadius="5" />-->
				<!--
                                    <Button
                                        Height="50"
                                        HorizontalAlignment="Stretch"
                                        materialDesign:ButtonAssist.CornerRadius="5"
                                        materialDesign:ShadowAssist.ShadowDepth="Depth3"
                                        Background="{DynamicResource PrimaryHueGridBrush}"
                                        Click="Button_Click"
                                        Content="{Binding Title}"
                                        Foreground="Black" />
                                </Grid>
                                <DataTemplate.Triggers>
				-->
				<!--<Trigger Property="Border.IsMouseOver" Value="true">
                                        <Setter Property="Opacity" Value="0.1" />
                                    </Trigger>-->
				<!--<Trigger Property="" />-->
				<!--
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <StackPanel
                        Grid.Row="1"
                        Grid.Column="1"
                        Orientation="Horizontal">
                        <RadioButton
                            Width="100"
                            Height="60"
                            Margin="10"
                            GroupName="RunControl"
                            IsChecked="True">
                            <RadioButton.Style>
                                <Style TargetType="{x:Type RadioButton}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                                <Grid>
                                                    <Border
                                                        x:Name="border"
                                                        Background="Red"
                                                        BorderBrush="Black"
                                                        BorderThickness="2"
                                                        CornerRadius="10" />
                                                    <StackPanel VerticalAlignment="Center">
                                                        <materialDesign:PackIcon
                                                            Width="25"
                                                            Height="25"
                                                            HorizontalAlignment="Center"
                                                            Kind="Rectangle" />
                                                        <TextBlock
                                                            HorizontalAlignment="Center"
                                                            FontSize="20"
                                                            Text="Stop" />
                                                    </StackPanel>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Foreground" Value="Black" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Foreground" Value="White" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RadioButton.Style>
				-->
				<!--<Button.Content>
                                <StackPanel>
                                    <materialDesign:PackIcon
                                        Width="25"
                                        Height="25"
                                        HorizontalAlignment="Center"
                                        Kind="Rectangle" />
                                    <TextBlock FontSize="20"
                                               Text="Start"
                                               HorizontalAlignment="Center" />
                                </StackPanel>
                            </Button.Content>-->
				<!--
                        </RadioButton>
                        <RadioButton
                            Width="100"
                            Height="60"
                            Margin="10"
                            GroupName="RunControl">
                            <RadioButton.Style>
                                <Style TargetType="{x:Type RadioButton}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                                <Grid>
                                                    <Border
                                                        x:Name="border"
                                                        Background="Red"
                                                        BorderBrush="Black"
                                                        BorderThickness="2"
                                                        CornerRadius="10" />
                                                    <StackPanel VerticalAlignment="Center">
                                                        <materialDesign:PackIcon
                                                            Width="25"
                                                            Height="25"
                                                            HorizontalAlignment="Center"
                                                            Kind="Play" />
                                                        <TextBlock
                                                            HorizontalAlignment="Center"
                                                            FontSize="20"
                                                            Text="Start" />
                                                    </StackPanel>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Foreground" Value="Black" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Foreground" Value="White" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RadioButton.Style>
                        </RadioButton>
                    </StackPanel>
                </Grid>-->
				<!--  end  -->
				<StatusBar
					Grid.Row="5"
					Height="40"
					Margin="10,0"
					Background="#222627"
					Foreground="WhiteSmoke">
					<StatusBarItem
						x:Name="SecurityStatus"
						Margin="5"
						BorderBrush="WhiteSmoke"
						BorderThickness="0,0,2,0">
						<TextBlock Margin="0,0,5,0" Text="{lex:Loc Security}" />
					</StatusBarItem>
					<StatusBarItem
						Margin="5"
						BorderBrush="WhiteSmoke"
						BorderThickness="0,0,2,0">
						<TextBlock Margin="0,0,5,0" Text="{lex:Loc Demo}" />
					</StatusBarItem>
					<StatusBarItem
						Margin="5"
						BorderBrush="WhiteSmoke"
						BorderThickness="0,0,2,0">
						<TextBlock Margin="0,0,5,0" Text="{lex:Loc NoTestType}" />
					</StatusBarItem>
					<StatusBarItem
						Margin="5"
						BorderBrush="WhiteSmoke"
						BorderThickness="0,0,2,0">
						<TextBlock Margin="0,0,5,0" Text="{lex:Loc SampleClosed}" />
					</StatusBarItem>
					<StatusBarItem
						Margin="5"
						BorderBrush="WhiteSmoke"
						BorderThickness="0,0,2,0">
						<TextBlock Margin="0,0,5,0" Text="{lex:Loc MethodsClosed}" />
					</StatusBarItem>
					<StatusBarItem
						Margin="5"
						BorderBrush="WhiteSmoke"
						BorderThickness="0,0,2,0">
						<TextBlock Margin="0,0,5,0" Text="{lex:Loc ReportClosed}" />
					</StatusBarItem>
					<StatusBarItem />
				</StatusBar>
			</Grid>
		</materialDesign:DrawerHost>
	</materialDesign:DialogHost>
</Window>
