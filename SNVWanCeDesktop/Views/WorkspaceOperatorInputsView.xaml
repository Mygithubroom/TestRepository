<UserControl
    x:Class="WanCeDesktopApp.Views.WorkspaceOperatorInputsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dao="clr-namespace:WanCeDesktopApp.Common.DAO"
    xmlns:ext="clr-namespace:WanCeDesktopApp.Extensions"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:local="clr-namespace:WanCeDesktopApp.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    d:DesignHeight="450"
    d:DesignWidth="800"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">

    <UserControl.Resources>
        <HierarchicalDataTemplate
            x:Key="TreeViewTemplate1"
            DataType="{x:Type dao:WorkspaceInputTypeInfo}"
            ItemsSource="{Binding AvailableParametersItemsArr}">
            <TextBlock Text="{Binding InputTypeName}" />
        </HierarchicalDataTemplate>
        <Style
            x:Key="TreeViewTemplate"
            BasedOn="{StaticResource MaterialDesignTreeViewItem}"
            TargetType="TreeViewItem">
            <Setter Property="ItemsSource" Value="{Binding AvailableParametersArr}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <ContentControl Content="{Binding Content}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="showtype" TargetType="StackPanel">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=DeterMiniedParametersList, Path=IsSelected}" Value="false">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=DeterMiniedParametersList, Path=IsSelected}" Value="true">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="c1"
            BasedOn="{StaticResource MaterialDesignTreeViewItem}"
            TargetType="TreeViewItem">
            <Style.Triggers>
                <!--  关键代码 可以多写一个hidden  -->
                <DataTrigger Binding="{Binding Visibility, RelativeSource={RelativeSource Mode=Self}}" Value="Collapsed">
                    <Setter Property="ItemTemplate">
                        <Setter.Value>
                            <HierarchicalDataTemplate>
                                <ContentControl Content="{Binding}" Visibility="Collapsed" />
                            </HierarchicalDataTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <!--  关键代码  -->
                <DataTrigger Binding="{Binding Visibility, ElementName=item}" Value="Visible">
                    <Setter Property="ItemTemplate">
                        <Setter.Value>
                            <HierarchicalDataTemplate>
                                <ContentControl Content="{Binding}" Visibility="Collapsed" />
                            </HierarchicalDataTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Background="{DynamicResource PrimaryHueGridBrush}" SizeChanged="Grid_SizeChanged">
        <!--<ScrollViewer
            x:Name="OperatorInputsScroll"
            HorizontalScrollBarVisibility="Auto"
            VerticalScrollBarVisibility="Auto">-->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <TextBlock
                x:Name="OperatorInputsViewDescribetion"
                MaxWidth="1300"
                Margin="10,10,0,0"
                HorizontalAlignment="Left"
                Text="{lex:Loc WorkSpaceOperatorInputDescribeOne}"
                TextWrapping="Wrap" />
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <!--  Left Content  -->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock
                        Margin="10,10,0,0"
                        Style="{StaticResource txbkFirstTitle}"
                        Text="{lex:Loc Available results}" />
                    <Grid Grid.Row="1" Grid.Column="0">
                        <Border
                            x:Name="treeView1Border"
                            Margin="10,0,0,0"
                            Background="#222627"
                            CornerRadius="5" />
                        <ScrollViewer
                            Name="treeView"
                            HorizontalScrollBarVisibility="Auto"
                            VerticalScrollBarVisibility="Auto">
                            <TreeView
                                Margin="10,0,0,0"
                                FontSize="18"
                                ItemsSource="{Binding AvailableParametersArr}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="DoubleClick">
                                        <i:InvokeCommandAction Command="{Binding MoveToRightCommand}" CommandParameter="{Binding ElementName=treeView, Path=SelectedItem}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TreeView.ItemTemplate>
                                    <HierarchicalDataTemplate ItemsSource="{Binding AvailableParametersItemsArr}">
                                        <ContentControl Name="item">
                                            <ContentControl.Content>
                                                <MultiBinding Converter="{StaticResource LocMultiConverter}">
                                                    <MultiBinding.Bindings>
                                                        <Binding Path="InputTypeName" />
                                                        <Binding Path="Culture" Source="{x:Static lex:LocalizeDictionary.Instance}" />
                                                    </MultiBinding.Bindings>
                                                </MultiBinding>
                                            </ContentControl.Content>
                                        </ContentControl>
                                    </HierarchicalDataTemplate>
                                </TreeView.ItemTemplate>
                            </TreeView>
                        </ScrollViewer>
                    </Grid>
                </Grid>
                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                    <Button
                        Width="70"
                        Height="46"
                        Margin="5,0,5,5"
                        Click="Button_Click"
                        Content="{materialDesign:PackIcon Kind=ArrowRight,
                                                          Size=24}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding MoveToRightCommand}" CommandParameter="{Binding ElementName=treeView, Path=SelectedItem}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button
                        Width="70"
                        Height="46"
                        Margin="5,5,5,0"
                        Content="{materialDesign:PackIcon Kind=ArrowLeft,
                                                          Size=24}"
                        Cursor="Hand">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding MoveToLeftCommand}" CommandParameter="{Binding ElementName=DeterMiniedParametersList, Path=SelectedItem}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </StackPanel>
                <!--  Right Content  -->
                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock
                        Margin="10,10,0,0"
                        Style="{StaticResource txbkFirstTitle}"
                        Text="{lex:Loc Selected results}" />
                    <Border
                        Grid.Row="1"
                        Background="#222627"
                        CornerRadius="5" />
                    <DockPanel Grid.Row="1">
                        <ListBox
                            x:Name="DeterMiniedParametersList"
                            Margin="0,40,0,0"
                            FontSize="18"
                            ItemsSource="{Binding DeterMiniedParametersArr}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" CommandParameter="{Binding ElementName=DeterMiniedParametersList, Path=SelectedItem}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <ContentControl Content="{Binding InputTypeName}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </Grid>
                <StackPanel Grid.Column="3" VerticalAlignment="Center">
                    <Button
                        x:Name="MoveUp"
                        Width="60"
                        Height="46"
                        Margin="5,0,5,5"
                        Click="MoveUp_Click"
                        Content="{materialDesign:PackIcon Kind=ArrowTop,
                                                          Size=24}" />
                    <Button
                        x:Name="MoveDown"
                        Width="60"
                        Height="46"
                        Margin="5,5,5,0"
                        Click="MoveDown_Click"
                        Content="{materialDesign:PackIcon Kind=ArrowDown,
                                                          Size=24}" />
                </StackPanel>
                <!--    -->
                <DockPanel Grid.Column="4">
                    <StackPanel>
                        <TextBlock Text="{Binding ParameterName}" />
                        <TextBlock
                            Margin="0,10,0,0"
                            FontSize="18"
                            Text="{lex:Loc WorkSpaceOperatorInputDescribeTwo}"
                            TextWrapping="Wrap" />
                        <CheckBox
                            Margin="0,10,0,0"
                            materialDesign:CheckBoxAssist.CheckBoxSize="30"
                            Content="{lex:Loc UnTested}"
                            IsChecked="{Binding IsUnTested}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Unchecked">
                                    <i:InvokeCommandAction Command="{Binding CheckedChangedCommand}" CommandParameter="{Binding ElementName=DeterMiniedParametersList, Path=SelectedItem}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Checked">
                                    <i:InvokeCommandAction Command="{Binding CheckedChangedCommand}" CommandParameter="{Binding ElementName=DeterMiniedParametersList, Path=SelectedItem}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </CheckBox>
                        <CheckBox
                            materialDesign:CheckBoxAssist.CheckBoxSize="30"
                            Content="{lex:Loc Testing}"
                            IsChecked="{Binding IsTesting}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Unchecked">
                                    <i:InvokeCommandAction Command="{Binding CheckedChangedCommand}" CommandParameter="{Binding ElementName=DeterMiniedParametersList, Path=SelectedItem}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Checked">
                                    <i:InvokeCommandAction Command="{Binding CheckedChangedCommand}" CommandParameter="{Binding ElementName=DeterMiniedParametersList, Path=SelectedItem}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </CheckBox>
                        <CheckBox
                            materialDesign:CheckBoxAssist.CheckBoxSize="30"
                            Content="{lex:Loc Tested}"
                            IsChecked="{Binding IsTested}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Unchecked">
                                    <i:InvokeCommandAction Command="{Binding CheckedChangedCommand}" CommandParameter="{Binding ElementName=DeterMiniedParametersList, Path=SelectedItem}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Checked">
                                    <i:InvokeCommandAction Command="{Binding CheckedChangedCommand}" CommandParameter="{Binding ElementName=DeterMiniedParametersList, Path=SelectedItem}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </CheckBox>
                    </StackPanel>
                </DockPanel>
            </Grid>
            <!--  Bottom  -->
            <StackPanel Grid.Row="3">
                <CheckBox
                    Margin="10"
                    materialDesign:CheckBoxAssist.CheckBoxSize="30"
                    Content="{lex:Loc Show all parameters}" />
            </StackPanel>
        </Grid>
        <!--</ScrollViewer>-->
    </Grid>
</UserControl>
